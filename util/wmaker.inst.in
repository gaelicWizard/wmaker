#!/bin/sh
#
# Install Window Maker for the current user
#

# xx herbert
if test "x$1" = "x--batch" ; then
  BATCH="1"
else
  BATCH=""
fi
# /xx herbert

# name of menu file we install (menu, plmenu)
inst_menu=""

LOCALE="${LC_ALL-${LC_MESSAGES-$LANG}}"

# directory where system wide configuration is stored
PKGDATADIR="#pkgdatadir#"
PKGCONFDIR="#pkgconfdir#"

GSUSER_DIR="$HOME/GNUstep"

VERSION="#version#"

BINDIR="#bindir#"

make_dir() {
echo "Creating directory $1..."
	mkdir "$1"
	chmod +rwx "$1"
}

#
# Copy files considering special cases
#
copy() {
	source="$1"
	target="$2"
	file="$(basename "$source")"
	rm -f "$target"
echo "Copying $source to $target..."
	if [ "$file" = "WindowMaker" ]; then
		sed -e "s|~/GNUstep/Defaults|$USERCONFDIR|g" "$source" \
		| sed -e "s|~/GNUstep/Library|$USERLIBDIR|g" "$source" \
			> "$target"
	else
		sed -e "s|\$HOME/GNUstep/Defaults|$USERCONFDIR|g" "$source" \
		| sed -e "s|\$HOME/GNUstep/Library|$USERLIBDIR|g" "$source" \
			> "$target"
	fi
}

#
# Generate WMRootmenu
#
GenerateMenu() {
	WMRootMenu="$USERCONFDIR/WMRootMenu"
echo "Generating $WMRootMenu..."
	wmgenmenu > "$WMRootMenu"
}

echo "Installing WindowMaker $VERSION for current user..."


if [ ! -d "$PKGDATADIR" ]; then
      echo "Could not find global data files"
      echo "Make sure you have installed Window Maker correctly"
      exit 1
fi

if [ ! -d "$PKGCONFDIR" ]; then
      echo "Could not find global configurations files"
      echo "Make sure you have installed Window Maker correctly"
      exit 1
fi

if type -p gnustep-config >/dev/null; then
	cd ~
	echo "Using GNUstep user directories"
	USERCONFDIR=~/"$(gnustep-config --variable=GNUSTEP_USER_DEFAULTS_DIR)"
	USERLIBDIR="$(gnustep-config --variable=GNUSTEP_USER_LIBRARY)"
else
	GSDIR="${WMAKER_USER_ROOT:-$GSUSER_DIR}"
	USERCONFDIR="${XDG_CONFIG_HOME:-$GSDIR/Defaults}"
	USERLIBDIR="${XDG_DATA_HOME:-$GSDIR/Library}"
	if [ ! -d "$USERCONFDIR" ] && [ ! -d "$USERLIBDIR" ] && [ ! -d "$GSDIR" ]; then
		# in this case, and in this case only, mkdir needs -p option
		mkdir -p "$GSDIR" || {
		    echo "Directory specified in WMAKER_USER_ROOT environment variable does not exist and could not be created"
		    exit 1
		}
		chmod +rwx "$GSDIR" || exit 1
	fi
	cd "$GSDIR"
	cd ..
fi

USERLWMDIR="$USERLIBDIR/WindowMaker"

if [ ! -d "$USERCONFDIR" ]; then
	make_dir "$USERCONFDIR"
fi
if [ ! -d "$USERLIBDIR" ]; then
	make_dir "$USERLIBDIR"
fi

echo "Copying defaults database..."

FILES="$(cd "$PKGCONFDIR" && ls -d *)"
all=""
for i in $FILES; do
	if [ ! -d "$PKGCONFDIR/$i" ]; then
		if [ -f "$USERCONFDIR/$i" -a -z "$BATCH" ]; then
			echo "The configuration file \"$i\" already exists in your defaults database."
			echo "Do you wish to replace it? <y/n/a> [n] $all"
			if [ "$all" != "a" ]; then
				read foo
				if [ "$foo" = "a" -o "$foo" = "A" ]; then
					all="a"
				fi
			fi
			if [ "$foo" = "y" -o "$foo" = "Y" -o "$all" = "a" ]; then
				copy "$PKGCONFDIR/$i" "$USERCONFDIR/$i"
			fi
		else
			copy "$PKGCONFDIR/$i" "$USERCONFDIR/$i"
		fi
	fi
done

GenerateMenu

if [ ! -d "$USERLIBDIR/Icons/" ]; then
      echo "Creating icon library directory $USERLIBDIR/Icons"
      make_dir "$USERLIBDIR/Icons"
fi


if [ ! -d "$USERLWMDIR/" ]; then
      echo "Creating WindowMaker data library directory $USERLWMDIR"
      make_dir "$USERLWMDIR"
fi

if [ ! -d "$USERLWMDIR/Styles" ]; then
	echo "Creating style library $USERLWMDIR/Styles"
	make_dir "$USERLWMDIR/Styles"
fi


if [ ! -d "$USERLWMDIR/Themes" ]; then
	echo "Creating theme library $USERLWMDIR/Themes"
	make_dir  "$USERLWMDIR/Themes"
fi


if [ ! -d "$USERLWMDIR/Backgrounds" ]; then
	echo "Creating bg image library $USERLWMDIR/Backgrounds"
	make_dir  "$USERLWMDIR/Backgrounds"
else
	echo "Default Backgrounds directory already exists. Skipping..."
fi


if [ ! -d "$USERLWMDIR/IconSets" ]; then
	echo "Creating icon setup library $USERLWMDIR/IconSets"
	make_dir  "$USERLWMDIR/IconSets"
else
	echo "Default IconSets directory already exists. Skipping..."
fi


if [ ! -d "$USERLWMDIR/Pixmaps" ]; then
	echo "Creating pixmap library $USERLWMDIR/Pixmaps"
	make_dir  "$USERLWMDIR/Pixmaps"
else
	echo "Default Pixmaps directory already exists. Skipping..."
fi


if [ ! -d "$USERLWMDIR/CachedPixmaps" ]; then
	make_dir "$USERLWMDIR/CachedPixmaps"
fi

if [ ! -d "$USERLWMDIR/WPrefs" ]; then
	make_dir "$USERLWMDIR/WPrefs"
fi

if test -z "#LITE#" ; then
FILES="$(cd "$PKGDATADIR" && ls menu menu.* plmenu plmenu.?? wmmacros)"
for i in $FILES; do
# xx herbert
	if [ -f "$USERLWMDIR/$i" -a -z "$BATCH" ]; then
# /xx herbert
		echo "The file \"$i\" already exists in $USERLWMDIR"
		echo "Do you wish to replace it? <y/n/a> [n] $all"
		if [ "$all" != "a" ]; then
			read foo
			if [ "$foo" = "a" -o "$foo" = "A" ]; then
				all="a"
			fi
		fi
		if [ "$foo" = "y" -o "$foo" = "Y" -o "$foo" = "a" ]; then
			copy "$PKGDATADIR/$i" "$USERLWMDIR/$i"
		fi
	else
		copy "$PKGDATADIR/$i" "$USERLWMDIR/$i"
	fi
done
fi

cp "$PKGDATADIR/README.themes" "$USERLWMDIR"
cp "$PKGDATADIR/README" "$USERLWMDIR"

test -f "$USERLWMDIR/autostart" || \
    cp "$PKGDATADIR/autostart.sh" "$USERLWMDIR/autostart"
chmod +rx "$USERLWMDIR/autostart"

test -f "$USERLWMDIR/exitscript" || \
    cp "$PKGDATADIR/exitscript.sh" "$USERLWMDIR/exitscript"
chmod +rx "$USERLWMDIR/exitscript"

# xx herbert
if test -n "$BATCH" ; then
  echo "Installation Finished"
  exit 0
fi
# /xx herbert


#
#######################

DATE="$(date +%b%d.%T)"

show_end_message() {

echo
echo "Installation Finished"
echo
echo "There are menus in 2 different file formats. The plain text format and"
echo "the property list format. The plain text format is more flexible, but"
echo "the menu in the property list format can be edited graphically. The"
echo "menu that will be used by default is the property list one. Read"
echo "    $USERLWMDIR/README"
echo "for information on how to change it."
  if [ "${inst_menu%.*}" = "menu" ]; then
echo "However, since you have locale set to $LOCALE and plmenu for such locale"
echo "was not found, your WMRootMenu contains path to text formated menu:"
echo "    $USERLWMDIR/$inst_menu"
  fi
}

wmaker_found=0
for xinit in .xinitrc .Xclients .xsession; do
     test ! -f "$HOME/$xinit" && continue
	 res="$(grep wmaker "$HOME/$xinit")"
     if test "x$res" != x; then
     	wmaker_found=1
	break
     fi
done
if test "$wmaker_found" = 1; then
	echo "Found Window Maker to already be your default window manager."
	show_end_message
	exit 0
fi


trap "show_end_message;exit" 2

show_end_message
